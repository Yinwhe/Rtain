name: CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

env:
  CARGO_TERM_COLOR: always

jobs:
  test:
    name: Test Suite
    runs-on: ubuntu-latest
    strategy:
      matrix:
        rust:
          - stable
          - beta
          - nightly
        include:
          - rust: stable
            can_fail: false
          - rust: beta  
            can_fail: false
          - rust: nightly
            can_fail: true
    continue-on-error: ${{ matrix.can_fail }}
    
    steps:
    - uses: actions/checkout@v4

    - name: Install Rust toolchain
      uses: dtolnay/rust-toolchain@master
      with:
        toolchain: ${{ matrix.rust }}
        components: rustfmt, clippy

    - name: Cache cargo dependencies
      uses: actions/cache@v4
      with:
        path: |
          ~/.cargo/bin/
          ~/.cargo/registry/index/
          ~/.cargo/registry/cache/
          ~/.cargo/git/db/
          target/
        key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}

    - name: Install system dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y iptables iproute2

    - name: Check formatting
      run: cargo fmt -- --check
      if: matrix.rust == 'stable'

    - name: Run clippy
      run: cargo clippy -- -D warnings
      if: matrix.rust == 'stable'

    - name: Run unit tests
      run: cargo test --lib --verbose

    - name: Run integration tests
      run: cargo test --test integration_test --verbose

    - name: Run E2E tests (basic)
      run: cargo test --test e2e_test --verbose
      continue-on-error: true  # E2E tests may fail without proper permissions

  security:
    name: Security Audit
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - name: Install Rust toolchain
      uses: dtolnay/rust-toolchain@stable
    - name: Install cargo-audit
      run: cargo install cargo-audit
    - name: Security audit
      run: cargo audit

  coverage:
    name: Code Coverage
    runs-on: ubuntu-latest
    if: github.event_name == 'push'
    steps:
    - uses: actions/checkout@v4
    - name: Install Rust toolchain
      uses: dtolnay/rust-toolchain@stable

    - name: Install tarpaulin
      run: cargo install cargo-tarpaulin

    - name: Install system dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y iptables iproute2

    - name: Generate code coverage
      run: cargo tarpaulin --verbose --all-features --workspace --timeout 120 --out xml

    - name: Upload to codecov.io
      uses: codecov/codecov-action@v3
      with:
        file: cobertura.xml
        fail_ci_if_error: false